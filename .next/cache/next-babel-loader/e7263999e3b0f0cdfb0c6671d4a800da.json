{"ast":null,"code":"var _jsxFileName = \"/Users/polones/httpd/augusto-cheme/rotzz-gg/src/pages/[summoner].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useFetch } from '../hooks/useFetch';\n\nconst SummonerPage = () => {\n  const router = useRouter();\n  const {\n    summoner\n  } = router.query;\n  const {\n    data,\n    error\n  } = useFetch('/api/matches'); //   const { data, error } = useSWR('/api/matches', url =>\n  //     fetch(url).then(response => response.json())\n  //   );\n\n  if (!data) {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }, \"loading\");\n  }\n\n  console.log(data);\n  return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, \"Summoner: \", summoner);\n};\n\nexport default SummonerPage;","map":{"version":3,"sources":["/Users/polones/httpd/augusto-cheme/rotzz-gg/src/pages/[summoner].tsx"],"names":["useRouter","useFetch","SummonerPage","router","summoner","query","data","error","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAGA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAeD,MAAM,CAACE,KAA5B;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBN,QAAQ,CAAC,cAAD,CAAhC,CAJyB,CAKzB;AACA;AACA;;AAEA,MAAI,CAACK,IAAL,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcF,QAAd,CAAP;AACD,CAhBD;;AAkBA,eAAeF,YAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport { useFetch } from '../hooks/useFetch';\nimport useSWR from 'swr';\n\nconst SummonerPage = () => {\n  const router = useRouter();\n  const { summoner } = router.query;\n\n  const { data, error } = useFetch('/api/matches');\n  //   const { data, error } = useSWR('/api/matches', url =>\n  //     fetch(url).then(response => response.json())\n  //   );\n\n  if (!data) {\n    return <p>loading</p>;\n  }\n\n  console.log(data);\n\n  return <p>Summoner: {summoner}</p>;\n};\n\nexport default SummonerPage;\n"]},"metadata":{},"sourceType":"module"}