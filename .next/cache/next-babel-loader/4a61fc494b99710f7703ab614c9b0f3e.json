{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport useSWR from 'swr';\nexport function useFetch(url, params) {\n  _s();\n\n  var _useSWR = useSWR(url, /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(url);\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  return {\n    data: data,\n    error: error\n  };\n}\n\n_s(useFetch, \"r2QYs02BSrn+Eu/1uMGZi8N+HnQ=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"sources":["/Users/polones/httpd/augusto-cheme/rotzz-gg/src/hooks/useFetch.ts"],"names":["useSWR","useFetch","url","params","fetch","response","json","data","error"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AAEA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAA+BC,MAA/B,EAAgD;AAAA;;AAAA,gBAC7BH,MAAM,CAACE,GAAD;AAAA,wEAAM,iBAAMA,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACXE,KAAK,CAACF,GAAD,CADM;;AAAA;AAC5BG,cAAAA,QAD4B;AAAA;AAAA,qBAEfA,QAAQ,CAACC,IAAT,EAFe;;AAAA;AAE5BC,cAAAA,IAF4B;AAAA,+CAI3BA,IAJ2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA,MADuB;AAAA,MAC7CA,IAD6C,WAC7CA,IAD6C;AAAA,MACvCC,KADuC,WACvCA,KADuC;;AAQrD,SAAO;AAAED,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA;AAAR,GAAP;AACD;;GATeP,Q;UACUD,M","sourcesContent":["import useSWR from 'swr';\n\nexport function useFetch(url: string, params?: object) {\n  const { data, error } = useSWR(url, async url => {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    return data;\n  });\n\n  return { data, error };\n}\n"]},"metadata":{},"sourceType":"module"}