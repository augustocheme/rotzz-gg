{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/polones/httpd/augusto-cheme/rotzz-gg/src/pages/[summoner].tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\n\nvar SummonerPage = function SummonerPage() {\n  _s();\n\n  var router = useRouter();\n  var summoner = router.query.summoner; //   const { data, error } = useFetch('/');\n\n  var _useSWR = useSWR('/api/user', function (url) {\n    return fetch(url).then(function (r) {\n      return r.json();\n    });\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }, \"Summoner: \", summoner);\n};\n\n_s(SummonerPage, \"F2OQGCTB9lgwThKfzWI7sczFgbA=\", false, function () {\n  return [useRouter, useSWR];\n});\n\n_c = SummonerPage;\nexport default SummonerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SummonerPage\");","map":{"version":3,"sources":["/Users/polones/httpd/augusto-cheme/rotzz-gg/src/pages/[summoner].tsx"],"names":["useRouter","useSWR","SummonerPage","router","summoner","query","url","fetch","then","r","json","data","error"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADyB,MAEjBI,QAFiB,GAEJD,MAAM,CAACE,KAFH,CAEjBD,QAFiB,EAIzB;;AAJyB,gBAKDH,MAAM,CAAC,WAAD,EAAc,UAAAK,GAAG;AAAA,WAC7CC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,KAAjB,CAD6C;AAAA,GAAjB,CALL;AAAA,MAKjBC,IALiB,WAKjBA,IALiB;AAAA,MAKXC,KALW,WAKXA,KALW;;AASzB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcR,QAAd,CAAP;AACD,CAVD;;GAAMF,Y;UACWF,S,EAISC,M;;;KALpBC,Y;AAYN,eAAeA,YAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport { useFetch } from '../hooks/useFetch';\nimport useSWR from 'swr';\n\nconst SummonerPage = () => {\n  const router = useRouter();\n  const { summoner } = router.query;\n\n  //   const { data, error } = useFetch('/');\n  const { data, error } = useSWR('/api/user', url =>\n    fetch(url).then(r => r.json())\n  );\n\n  return <p>Summoner: {summoner}</p>;\n};\n\nexport default SummonerPage;\n"]},"metadata":{},"sourceType":"module"}