{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/polones/httpd/augusto-cheme/rotzz-gg/src/pages/[summoner].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport useSWR from 'swr';\nimport React from 'react';\nimport axios from 'axios';\n\nvar SummonerPage = function SummonerPage() {\n  _s();\n\n  var _useSWR = useSWR('/api/matches', /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios({\n                method: 'get',\n                url: 'http://localhost:3000/api/matches',\n                headers: context.req ? {\n                  cookie: context.req.headers.cookie\n                } : undefined\n              });\n\n            case 2:\n              response = _context.sent;\n              return _context.abrupt(\"return\", fetch(url).then(function (r) {\n                return r.json();\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()),\n      matchHistory = _useSWR.data,\n      error = _useSWR.error;\n\n  console.log(matchHistory);\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }, \"Summoner:\");\n}; // SummonerPage.getInitialProps = async context => {\n//   console.log(context.req.headers);\n//   const response = await axios({\n//     method: 'get',\n//     url: 'http://localhost:3000/api/matches',\n//     headers: context.req ? { cookie: context.req.headers.cookie } : undefined,\n//   });\n//   return {\n//     matchHistory: response.data,\n//   };\n// };\n\n\n_s(SummonerPage, \"yloQ2G2soXsPwJupCB+r+lYjVQk=\", false, function () {\n  return [useSWR];\n});\n\n_c = SummonerPage;\nexport default SummonerPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SummonerPage\");","map":{"version":3,"sources":["/Users/polones/httpd/augusto-cheme/rotzz-gg/src/pages/[summoner].tsx"],"names":["useSWR","React","axios","SummonerPage","url","method","headers","context","req","cookie","undefined","response","fetch","then","r","json","matchHistory","data","error","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA,gBACaH,MAAM,CAAC,cAAD;AAAA,wEAAiB,iBAAMI,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACpCF,KAAK,CAAC;AAC3BG,gBAAAA,MAAM,EAAE,KADmB;AAE3BD,gBAAAA,GAAG,EAAE,mCAFsB;AAG3BE,gBAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,GAAc;AAAEC,kBAAAA,MAAM,EAAEF,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAAoBG;AAA9B,iBAAd,GAAuDC;AAHrC,eAAD,CAD+B;;AAAA;AACrDC,cAAAA,QADqD;AAAA,+CAMpDC,KAAK,CAACR,GAAD,CAAL,CAAWS,IAAX,CAAgB,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,eAAjB,CANoD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAjB;;AAAA;AAAA;AAAA;AAAA,MADnB;AAAA,MACXC,YADW,WACjBC,IADiB;AAAA,MACGC,KADH,WACGA,KADH;;AAUzBC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,CAZD,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;GAzBMb,Y;UACkCH,M;;;KADlCG,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import useSWR from 'swr';\nimport React from 'react';\nimport Cookies from 'universal-cookie';\nimport axios from 'axios';\nimport { match } from 'assert';\n\nconst SummonerPage = () => {\n  const { data: matchHistory, error } = useSWR('/api/matches', async url => {\n    const response = await axios({\n      method: 'get',\n      url: 'http://localhost:3000/api/matches',\n      headers: context.req ? { cookie: context.req.headers.cookie } : undefined,\n    });\n    return fetch(url).then(r => r.json());\n  });\n\n  console.log(matchHistory);\n  return <p>Summoner:</p>;\n};\n\n// SummonerPage.getInitialProps = async context => {\n//   console.log(context.req.headers);\n//   const response = await axios({\n//     method: 'get',\n//     url: 'http://localhost:3000/api/matches',\n//     headers: context.req ? { cookie: context.req.headers.cookie } : undefined,\n//   });\n\n//   return {\n//     matchHistory: response.data,\n//   };\n// };\n\nexport default SummonerPage;\n"]},"metadata":{},"sourceType":"module"}